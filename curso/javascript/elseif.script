Se você tiver várias condições que precisam ser tratadas, pode encadear as instruções if junto com as instruções else if.

function testElseIf(val) {
  if (val > 10) {
    return "Greater than 10";
  }else if (val < 5) {
    return "Smaller than 5";
  }else{ }

  return "Between 5 and 10";
}

testElseIf(7);



A ordem é importante nas declarações if, else if.



A função é executada de cima para baixo, portanto, você deve ter cuidado com a instrução que vem primeiro.

Embora essas duas funções pareçam quase idênticas, se passarmos um número para ambas, obteremos resultados diferentes.
function orderMyLogic(val) {
  if (val < 5) {
    return "Less than 5";
  } else if (val < 10) {
    return "Less than 10";
  } else {
    return "Greater than or equal to 10";
  }
}

console.log(orderMyLogic(3));




instruções if / else podem ser encadeadas para lógica complexa. Aqui está o pseudocódigo de várias instruções if / else if encadeadas:



if (condição1) {

  declaração 1

} else if (condição2) {

  declaração 2

} else if (condição3) {

  declaração 3

. . .

} outro {

  declaração N

}




function testSize(num) {
  // Only change code below this line

if(num < 5){
  return "Tiny"
} else if(num < 10){
  return "Small"
  }else if(num < 15){
  return "Medium"
  }else if(num < 20){
  return "Large"
  }else{
    return "Huge"
  }
  // Only change code above this line
}

console.log(testSize(19));
